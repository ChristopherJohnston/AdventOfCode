#!/usr/bin/env python
import argparse
import sys
import os
import prettytable
import requests
import urllib3
import json
import datetime

def main():
    parser = argparse.ArgumentParser(
        prog='setup',
        description="Daily setup script"
    )
    parser.add_argument('--year', type=str, help="The year to set up")
    parser.set_defaults(year=datetime.date.today().year)
    args = parser.parse_args()

    with requests.Session() as s:
        s.cookies.set("session", os.environ['AOC_SESSION'])
        result = s.get(f"https://adventofcode.com/{args.year}/leaderboard/private/view/{os.environ['AOC_BOARD']}.json")
        board = json.loads(result.content)

    members = board.get('members', {})
    tbl = prettytable.PrettyTable(['Name', 'Stars', 'Score', "Last Completion"] + [f"{i:02d}" for i in range(1,26)])

    for member in members.values():
        name = member.get('name', 'Unknown Coder')
        stars = member.get('stars')
        score = member.get('local_score')
        completion_timestamp = member.get('last_star_ts')
        last_completion_time = datetime.datetime.fromtimestamp(completion_timestamp) if type(completion_timestamp) is int else 'Never'

        levels = member.get('completion_day_level')
        days = []

        for day in range(1, 26):
            completion_day = levels.get(str(day), {})
            if completion_day.get('2'):
                days.append("**")
            elif completion_day.get('1'):
                days.append("*")
            else:
                days.append('  ')
        
        row = [name, stars, score, last_completion_time] + days
        tbl.add_row(row)
    
    print(tbl.get_string(sortby="Score", reversesort=True))

if __name__ == '__main__':
    main()